<?xml version="1.0"?>

<node name="occlusion_ptc_fast" label="occlusion_ptc_fast" author="DRL" icon="occlusion_DRL.png">
	<help>Optimized version of point-based occlussion. 
	The entire occlusion calculation is omitted for trace depths higher than the specified maximum.</help>
	<input>
		<property name="Ns" type="normal" default="normal(0,0,0)">
			<help>Shading normal. 
			It has to be normalized (of 1 unit length) and should be faceforwarded. 
			You really want to plug ShadingNormal node here. Or normalized reflection vector (converted to normal).</help>
		</property>
		<property name="ConeAngle" type="float" default="80" detail="uniform"
			subtype="slider"
			range="0 90 .01">
			<help>The sampled cone is defined by vector +- ConeAngle measured in degrees. 
			Therefore, angle of sampled cone = ConeAngle * 2!!! 
			90 = entire hemisphere.</help>
		</property>
		<property name="SampleBase" type="float" default="1" detail="uniform"
		subtype="slider"
		range="0 1 .01">
			<help>Specifies the (float) jittering of the hemisphere ray origins. 
			A value of 1 corresponds to jittering over the size of a micropolygon. 
			This is useful to smooth out aliased occlusion next to edges. 
			Default is 1.</help>
		</property>
		<property name="MaxDist" type="float" default="1.0e38"  detail="uniform">
			<help>Only consider intersections closer than this distance. 
			Default is 1e38.</help>
		</property>
		<property name="EnvMap" type="string" default="" detail="uniform" subtype="file"/>
		<property name="EnvSpace" type="string" default="world" detail="uniform"/>
		<property name="FalloffMode" type="float" default="0" detail="uniform" 
			subtype="selector"
			range="Exponential=0:Polynomial=1">
			<help>Falloff curve to use. 
			0 is exponential (default) and 1 is polynomial.</help>
		</property>
		<property name="FalloffValue" type="float" default="0" detail="uniform"/>
		<property name="HitSides" type="string" default="front" detail="uniform"
			subtype="selector"
			range="front:back:both"/>
		<property name="MaxSolidAngle" type="float" default="0.1" detail="uniform"
		subtype="slider"
		range="0 0.1 0.001">
			<help>Quality vs speed control. The lower, the better, but slower. 
			For final render should be below 0.05. 
			Default is 0.1.</help>
		</property>
		<property name="clamp" type="float" default="1" detail="uniform" subtype="switch"/>
		<property name="ptcFile" type="string" default="" detail="uniform" subtype="file"/>
		<property name="CoordSys" type="string" default="world" detail="uniform">
			<help>Coordinate system in which ptc-file was baked.</help>
		</property>
		<property name="rayDepth" type="float" default="0" detail="uniform">
			<help>Traced depth of the current ray. 
			Connect rayDepth node to this input.</help>
		</property>
		<property name="rayDepth_max" type="float" default="1" detail="uniform"
			subtype="slider"
			range="0 8 1">
			<help>Maximum traced depth of the ray, at which occlusion will be calculated. 
			0 - direct visibility, 1 - reflections of the 1st level.
			Default is 1.</help>
		</property>
	</input>
	<output>
		<property name="occlusion" type="float" default="0"/>
		<property name="avg_Distance" type="float" default="0"/>
		<property name="avg_EnvDir" type="vector" default="vector( 0, 0, 0 )"/>	
		<property name="EnvColor" type="color" default="color(0)"/>
	</output>
	<include>
	</include>
	<internal>
		<variable name="sampledAngle"/>
	</internal>
	<code><![CDATA[

// code begin - occlusion_ptc_fast
uniform float $(sampledAngle);

if ( $(rayDepth) <= $(rayDepth_max) ) {
	$(sampledAngle) = radians( $(ConeAngle) );
	$(occlusion) = occlusion (P, $(Ns), 0,
		"coneangle", $(sampledAngle),
		"samplebase", $(SampleBase),
		"maxdist", $(MaxDist),
		"environmentmap", $(EnvMap),
		"environmentspace", $(EnvSpace),
		"falloffmode", $(FalloffMode),
		"falloff", $(FalloffValue),
		"pointbased", 1,
		"filename", $(ptcFile),
		"coordsystem", $(CoordSys),
		"hitsides", $(HitSides),
		"maxsolidangle", $(MaxSolidAngle),
		"clamp", $(clamp),
		// Output:
		"environmentcolor", $(EnvColor),
		"environmentdir", $(avg_EnvDir),
		"distance", $(avg_Distance)
	);
	$(avg_EnvDir) = vtransform("world", $(avg_EnvDir) );
}
// code end - occlusion_ptc_fast
  ]]>
	</code>
</node>
