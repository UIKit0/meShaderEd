<?xml version="1.0"?>

<node name="FractalV" author="Pixar" icon="FractalV.png">
	<help>Vector Fractal function.</help>
	<input>
		<property name="Layers" type="float" default="6" subtype="slider" range="1 8 1">
		<help>The number of noise layers used.</help>
		</property>  
		<property name="Frequency" type="float" default="1" subtype="slider" range="0.1 10">
		<help>Sets the lowest (starting) frequency of the noise layers.</help>
		</property> 
		<property name="Lacunarity" type="float" default="2" subtype="slider" range="1.25 4">
		<help>The scaler used to determine the 
		    frequency of each sucessive layer of noise. Smaller 
		    numbers will cause the layers to be more closely
		    spaced in frequency. Larger values will space them
		    further apart.</help>
		</property>
		<property name="Dimension" type="float" default="1" subtype="slider" range="0 2">
		<help>The frequency exponent. This value is used to
		    scale the magnitude of each sucessive layer of noise using
		    the formula 1/f^(3-2*Dimension); where f is the frequency
		    of the noise being used for a given layer. It's called
		    Dimension since this value relates to the fractal
		    dimension. Bigger values are rougher, smaller values are
		    smoother.</help>
		</property>
		<property name="Flow" type="float" default="1" subtype="slider" range="0 3">
		<help>Determines the degree to which the original space
		    is warped by the vector fractal field by each sucessive
		    layer.</help>
		</property>
		<property name="Variation" type="float" default="0" >
		<help>This value controls which particular variation
		of the appearance you get - without altering the qualities
		of the appearance determined by the other controls. So, for
		example, you can use this to animate the appearance by
		connecting this to Time, or create several unique instances
		of the appearance by setting this to different values.</help>
		</property>
		<property name="Q" type="point" default="point(0,0,0)"/>	
		<property name="duQ" type="vector" default="vector(0,0,0)"/>	
		<property name="dvQ" type="vector" default="vector(0,0,0)"/>	
	</input>
	<output>
	  <property name="result" type="vector" default="vector(0,0,0)"/>
	</output>
	<internal>
	  <variable name="Noise"/>
	  <variable name="i"/>
	  <variable name="sum"/>
	  <variable name="mag"/>
	  <variable name="f"/>
	  <variable name="dQ"/>
	  <variable name="QQ"/>
	  <variable name="value"/>
	</internal>
	<code><![CDATA[	
	  vector $(Noise)(point Q)
		{
			extern float $(Variation);
			vector	V;
			
			V = vector noise( Q, $(Variation) );
			V = vector( 
			    smoothstep(.2, .8, comp(V, 0)),
			    smoothstep(.2, .8, comp(V, 1)),
			    smoothstep(.2, .8, comp(V, 2))
			);
			return ( 2 * V - vector 1 );
		}
		       
		uniform float	$(i);
		float	$(sum), $(mag), $(f);
		point	$(QQ);
		float	$(dQ);
		vector $(value) = vector( 0 );   
		    
		$(dQ) = max(
			max( abs(xcomp( $(duQ) )) + abs(xcomp( $(dvQ) )), abs(ycomp( $(duQ) )) + abs(ycomp( $(dvQ) )) ),
			abs(zcomp( $(duQ) )) + abs(zcomp( $(dvQ) ))
		);

		$(QQ) = $(Q); 
		$(f) = $(Frequency);
		$(result) = mix( $(Noise)( $(f) * $(QQ) ), vector 0, smoothstep (.25, 1, $(f) * $(dQ) ));
		$(QQ) += $(Flow) / $(Layers) * $(result);
		$(sum) = 1;

		for ( $(i) = 1 ; $(i) < $(Layers) ; $(i) += 1) 
	  {
			$(f) *= $(Lacunarity);
			$(mag) = 1/pow( $(f), 3 - 2 * $(Dimension) );
			$(value) += $(mag) * mix( $(Noise)( $(f) * $(QQ) ), vector 0, smoothstep (.25, 1, $(f) * $(dQ) ));
			$(QQ) += $(Flow) / $(Layers) * $(value);
			$(result) += $(value);
			$(sum) += $(mag);
		}

		$(result) /= $(sum);	
  ]]>
	</code>
</node>