<?xml version="1.0"?>

<node name="me_environment" label="Environment" author="mesh">
	<help></help>
	<input>
	  <property name="P" type="point" default="point(0,0,0)" />		
	  <property name="R" type="vector" default="vector(0,0,0)" />		
		<property name="envspace" type="string" default="" detail="uniform"/>
		<property name="envname" type="string" default="" detail="uniform" subtype="file"/>
		<property name="Kr" type="float" default="1"/>
		<property name="blur" type="float" default="0" detail="varying"/>
		<property name="envrad" type="float" default="1" detail="uniform"/>
		<property name="samples" type="float" default="1" detail="uniform" subtype="slider" range="1 32 1"/>
		<property name="filter" type="string" default="gaussian" detail="uniform" subtype="selector" range="box:triangle:b-spline:radial-bspline:gaussian:sinc:disk"/>
		<property name="lerp" type="float" default="1" detail="uniform" subtype="switch"/>
		
		<property name="bias" type="float" default="0" detail="uniform"/>
		<property name="label" type="string" default="" detail="uniform"/>
		<property name="subset" type="string" default="" detail="uniform"/>
		
	</input>
	<output>
		<property name="result" type="color" default="color ( 0, 0, 0 )"/>	
		<property name="occlusion" type="float" default="0" detail="varying"/>
		<property name="opacity" type="color" default="color(1,1,1)" detail="varying"/>	
	</output>
	<include>
	  <file name="filterwidth.h"/>
	  <file name="raysphere.h"/>
	</include>
	<internal>
	</internal>
	<code>
  <![CDATA[
	
  if ( $(envspace) == "NDC") 
  {
    /* envspace "NDC" signifies the special case of a flat refl map */
    point Pndc = transform( "NDC", $(P) );
    $(result) = color texture( 
        $(envname), 
        xcomp(Pndc), 
        ycomp(Pndc), 
        "blur", $(blur),
        "samples", $(samples),
        "filter", $(filter),
        "lerp", $(lerp)
        );
  } 
  else 
  {
    vector Rsp;
    if ( $(envspace) != "" && $(envname) != "raytrace" ) /* "reflection" */
    {
       Rsp = normalize( vtransform( $(envspace), $(R) ) );
       if ( $(envrad) != 0) 
       {
         /* Transform to the space of the environment map */
         point Psp = transform( $(envspace), $(P) );
         uniform float r2 = $(envrad) * $(envrad);
         /* Clamp the position to be *inside* the environment sphere */
         if ( (vector Psp).(vector Psp) > r2 )
          Psp = point( $(envrad) * normalize( vector Psp ) );
         float t0, t1;
         if ( raysphere( Psp, Rsp, $(envrad), 1.0e-4, t0, t1 ) > 0 )
          Rsp = vector( Psp + t0 * Rsp );
      }
    } 
    else 
      Rsp = $(R);
      
    if ( $(Kr) > 0.0001 ) 
    {
      $(result) = color environment(
        $(envname) 
        ,Rsp 
        ,"blur", $(blur) 
        ,"samples", $(samples)
        ,"filter", $(filter)
        ,"lerp", $(lerp)
        
        );
        /*
        ,"bias", $(bias)
        ,"label", $(label)
        ,"subset", $(subset)
        ,"occlusion", $(occlusion) 
        ,"opacity", $(opacity)
        */
    }
  }
  $(result) *= $(Kr);
  ]]>
	</code>	
</node>
