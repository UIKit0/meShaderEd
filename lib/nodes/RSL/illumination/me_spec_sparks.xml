<?xml version="1.0"?>

<node name="me_spec_sparks" author="mesh" icon="me_spec_sparks.png">
	<help>Specularity with Snow sparks effect</help>
	<input>
	  <property name="Nf" type="normal" default="normal(0,0,0)" />	
		<property name="category" type="string" default=""/>
		
		<property name="Ks" type="float" default="10.0"/>
		<property name="roughness" type="float" default="0.3"/>
		
		<property name="repeat_s" type="float" default="1000"/>
		<property name="repeat_t" type="float" default="1000"/>
		
		<property name="colorize" type="float" default="0" subtype="switch"/>
		
		<property name="octaves" type="float" default="6.0"/>
		<property name="lacunarity" type="float" default="2.0"/>
		<property name="gain" type="float" default="0.5"/>
		
		<property name="FilterWidth" type="float" default="0.1"/>
		<property name="FilterTop" type="float" default="0.2"/>
		<property name="FilterBottom" type="float" default="0.7"/>
		
		<property name="Seed" type="float" default="0"/>
		
	</input>
	<output>
		<property name="result" type="color" default="color( 0, 0, 0 )"/>	
	</output>
	<include>
	  <file name="noises.h"/>
	</include>	
	<internal>
	  <variable name="V"/>
	  <variable name="C"/>
	  <variable name="p_P"/>
	  <variable name="pp"/>
	  <variable name="amp"/>
	  <variable name="sum"/>
	  <variable name="fw"/>
	  <variable name="i"/>
	  <variable name="Fb"/>
	  <variable name="coeff"/>
	  <variable name="SnowC"/>
	</internal>
	<code>
  <![CDATA[

	vector $(V) = -normalize(I);
/*	
	extern vector L;
	extern point P;
*/		
	color $(C) = 0; 
	point $(p_P) = point( $(repeat_s) * s * 1000, $(repeat_t) * t * 1000, $(Seed) );

  float $(amp) = 1;
  point $(pp) = $(p_P);
  float $(sum) = 0, $(fw) = $(FilterWidth);
  float $(i);

  for( $(i) = 0;  $(i) < $(octaves) ;  $(i) += 1) 
  {
		$(sum) += $(amp) * filteredsnoise( $(pp), $(fw) );
		$(amp) *= $(gain);
		$(pp) *= $(lacunarity);
		$(fw) *= $(lacunarity);
  }	

	float $(Fb) = $(sum);
	float $(coeff) = 1 - ( $(V).$(Nf) );

	if( $(colorize) == 1 ) 
		$(C) = color noise( $(p_P), $(Seed) );
	else 
		$(C) = color(1) * float noise( $(p_P), $(Seed) );
	$(C) = color( smoothstep( .2, .8, comp( $(C), 0 ) ),
							  smoothstep( .2, .8, comp( $(C), 1 ) ),
							  smoothstep( .2, .8, comp( $(C), 2 ) ) );
	float $(SnowC) = $(coeff) * smoothstep( $(FilterTop), $(FilterBottom), $(Fb) );
	$(result) = $(C) * $(Ks) * $(SnowC) * specular( $(Nf), $(V), $(roughness) );
  ]]>
	</code>	
</node>
