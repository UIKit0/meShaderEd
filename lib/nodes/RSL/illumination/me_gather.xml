<?xml version="1.0"?> 

<node name="me_gather" author="mesh">
	<help>A low-level interface to ray tracing.</help>
	<input>
		<property name="N" type="normal" default="normal(0,0,0)" />		
		
		<property name="filter" type="color" default="color(1,1,1)" />		
		<property name="fill" type="color" default="color(0,0,0)" />		
    
		<property name="traceSet" type="string" default="" detail="uniform"/>	
		<property name="rayLabel" type="string" default="" detail="uniform"/>
		<property name="rayDepth" type="float" default="2" detail="uniform"/>
		
		<property name="samples" type="float" default="1" detail="uniform" />	
		<property name="sampleBase" type="float" default="1" detail="uniform" >
		<help>Specifies a multiplier on the jitter area of the ray origin. 
		The default value is 1 which means that the origin is jittered 
		within an area which is the size of the micropolygon.</help>
    </property>
    
    <property name="blur" type="float" default="0"/>	
    <property name="maxdist" type="float" default="-1" detail="uniform">
    <help>default = RI_INFINITY (1.0e38)</help>
    </property>
    
    <property name="twosided" type="float" default="1" detail="uniform" subtype="switch"/>	
    
    <property name="traceDir" type="vector" default="vector(0,0,0)">
    <help>The direction to look.</help>
		</property>		
    <property name="tracePt" type="point" default="point(0,0,0)">
		<help>Typically you'll want to connect this to SurfacePoint</help>
		</property>
		<property name="dQu" type="vector" default="vector(0,0,0)"/>	
		<property name="dQv" type="vector" default="vector(0,0,0)"/>	

	</input>
	<output>
		<property name="outColor" type="color"/>	
		<property name="outOpacity" type="color"/>	
	</output>
	<internal>
	  <variable name="sci"/> 
	  <variable name="soi"/>
	  <variable name="raydepth"/>
	</internal>
	<code><![CDATA[
	/* extern normal N; */
	/* extern vector I; */
	uniform float $(raydepth) = 0;
	color $(sci) = 0, $(soi) = 0;
	
	/* if ( $(maxdist) == -1 )
	  $(maxdist) = 1.0e38; */
	  
	rayinfo("depth", $(raydepth));
	
	if ( $(raydepth) <= $(rayDepth) )
	{
    if (( $(twosided) != 0 || $(N).I <= 0) && $(samples) > 0)
    {
      
      gather("illuminance", 
              $(tracePt), 
              $(traceDir), 
              $(blur) * radians(5), 
              $(samples),
              "subset", $(traceSet),
              "label", $(rayLabel),
              "samplebase", $(sampleBase),
              "maxdist", $(maxdist),
              "surface:Ci", $(sci),
              "surface:Oi", $(soi) 
      ) 
      {
        $(outColor) += $(sci);
        $(outOpacity) += $(soi);
      } 
      else 
      {
        $(outColor) += $(fill);	
      }
      
      $(outColor) /= $(samples);
      $(outOpacity) /= $(samples);
    }
  }
  $(outColor) *= $(filter);

	]]>
	</code>		
</node>
