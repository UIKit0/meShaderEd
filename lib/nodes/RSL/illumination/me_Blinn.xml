<?xml version="1.0"?>

<node name="me_Blinn" author="mesh" icon="me_Blinn.png">
	<help>Blinn specular function</help>
	<input>
	  <property name="N" type="normal" default="normal(0,0,0)" />	
		<property name="category" type="string" default=""/>
		<property name="specColor" type="color" default="color( 1, 1, 1 )"/>
		<property name="Ks" type="float" default="1.0" subtype="slider" range="0 1 0.01"/>
		<property name="eccentricity" type="float" default="0.5" subtype="slider" range="0 1 0.01"/>
		<property name="specularRollOff" type="float" default="0.3" subtype="slider" range="0 1 0.01"/>
		<property name="reflectivity" type="float" default="1.0" subtype="slider" range="0 1 0.01"/>
	</input>
	<output>
		<property name="result" type="color" default="color ( 0, 0, 0 )"/>	
	</output>
	<include>
	</include>	
	<internal>
	  <variable name="R"/>
	  <variable name="E"/>
	  <variable name="V"/>
	  <variable name="VN"/>
	  <variable name="C"/>
	  <variable name="Cr"/>
	</internal>
	<code>
  <![CDATA[
  
  vector $(R) = reflect( normalize(I), normalize( $(N) ) );
  vector $(V) = normalize(-I);
  float $(VN) = $(V).$(N);
  color $(C) = 0, $(Cr) = 0;
  float $(E) = 0;
  
  if ( $(eccentricity) != 1 )
    $(E) = 1 / ( $(eccentricity) * $(eccentricity) - 1);
  else
    $(E) = -1e5;
  #ifndef AIR 
  illuminance( $(category), P, $(N), PI/2, "lightcache", "refresh" )
  #else
  P = P; /* dirty light cache */
  illuminance( $(category), P, $(N), PI/2 )
  #endif
  {
    vector H, Ln;
    float nondiff, nonspec;
    float NH, NH2, NHSQ, Dd, Gg, VH, LN, Ff, tmp;
    
    if ( 0 == lightsource("__nonspecular", nonspec) )
      nonspec = 0;
    if ( nonspec < 1 )
    {
      Ln = normalize(L);
      H = normalize( Ln + $(V) );
      NH = $(N).H;
      NHSQ = NH * NH;
      NH2 = NH * 2;
      Dd = ( $(E) + 1 ) / ( NHSQ + $(E) );
      Dd *= Dd;
      VH = $(V).H;
      LN = Ln.$(N);
      if ( $(VN) < LN )
      {
        if ( $(VN) * NH2 < VH )
          Gg = NH2 / VH;
        else
          Gg = 1 / $(VN);
      }
      else
      {
        if( LN * NH2 < VH )
          Gg = (LN * NH2) / (VH * $(VN));
        else
          Gg = 1 / $(VN);
      }
      /* poor man's Fresnel */
      tmp = pow((1 - VH), 3);
      Ff = tmp + (1 - tmp) * $(specularRollOff);
      $(C) += Cl * Dd * Gg * Ff;
    
      /* now look for environment reflections.  
         These are indicated by lights which are specular AND nondiffuse 
      */
      if ( 0 != lightsource( "__nondiffuse", nondiff ) )
      {
        $(Cr) += ( 1 - nonspec ) * nondiff * Ff * Cl;
      }
    }
  }
     
 $(result) = $(Ks) * $(specColor) * ( $(C) + $(reflectivity) * $(Cr) );
  
  ]]>
	</code>	
</node>
