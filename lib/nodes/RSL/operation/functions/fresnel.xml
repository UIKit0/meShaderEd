<?xml version="1.0"?>

<node name="fresnel" author="mesh">
	<help>
	  void fresnel( vector I, N; float eta, Kr, Kt [; output vector R, T] )

    Return the reflection coefficient Kr and refraction (or transmission) coefficient Kt given an incident direction I, 
    the surface normal N, and the relative index of refraction eta. eta is the ratio of the index of refraction 
    in the volume containing the incident vector to that of the volume being entered. 
    These coefficients are computed using the Fresnel formula. 
    Optionally, this procedure also returns the reflected (R) and transmitted (T) vectors. 
    The transmitted vector is computed using Snell's law. 
    The angle between I and N is supposed to be larger than 90 degrees. 
    If the angle is less than 90 degrees, fresnel will return full reflection (Kr = 1, Kt = 0).
	</help>
	<input>
		<property name="I" type="vector" default="vector(0,0,0)"/>
		<property name="N" type="normal" default="normal(1,1,1)"/>  
		<property name="ior" type="float" default="1.33"/>
  </input>
	<output>
		<property name="Kr" type="float"/>
		<property name="Kt" type="float"/>
		<property name="R" type="vector"/>	
		<property name="T" type="vector"/>		
	</output>
	<internal>
	<variable name="front" />
	</internal>
	<code>
<![CDATA[
  
  float $(front) = ($(I).$(N) <= 0) ? 1 : 0;
  
	if ( $(ior) != 0 )
	{
  	float eta = ( $(front) == 1 ) ? (1 / $(ior) ) : $(ior); 
	  fresnel( $(I), $(N), eta, $(Kr), $(Kt), $(R), $(T) );
  }
  
  
	$(Kr) = smoothstep(0., 0.5, $(Kr) );
	$(Kt) = 1. - $(Kr);
	
  ]]>
	</code>
</node>
