<?xml version="1.0"?> 

<node name="me_gummi_light" type="rsl_code" author="mesh">
	<help>Dome distant light shader.</help>
	<input>
		<property name="category" type="string" default="__dome" detail="uniform"/>
		<property name="ShadowName" type="string" default="" detail="uniform" subtype="file"
		  range="All files=*.*:TEX=*.tex:TDL=*.tdl:TIFF=*.tif">
		<help>Thickness Map. Map should be a deep shadow map created using the deepprevdisttotal display mode.</help>
		</property>
		
		<property name="Diffuse" type="float" default="0" subtype="slider" range="0 1 .01"/>
		<property name="Specular" type="float" default="0" subtype="slider" range="0 1 .01"/>

	</input>
	<output>
	  <property name="Cl" type="color" default="color(0,0,0)" />
	  
	  <property name="__category" type="string" default="" detail="uniform" provider="primitive"/>
	  <property name="__nonspecular" type="float" default="0" detail="uniform" provider="primitive"/>
	  <property name="__nondiffuse" type="float" default="0" detail="uniform" provider="primitive"/>
	  <property name="__shdname" type="string" default="" detail="uniform" provider="primitive"/>
	  
	</output>
	<internal>
		<variable name="gummiAmount"/>
		<variable name="thickness"/>
		<variable name="mapName"/>
		
		<variable name="s_mapBlur"/>
		<variable name="s_mapSamples"/>
		<variable name="s_mapFilter"/>
		<variable name="s_mapFilterWidth"/>
		<variable name="s_mapBias"/>
		<variable name="s_gummiFalloff"/>
		<variable name="s_tintColor"/>
	</internal>
	<code><![CDATA[
   
	color $(gummiAmount) = 0; 
	float $(thickness) = 0;
	uniform $(string mapName) = "";
    
 uniform float $(s_mapBlur);
 uniform float $(s_mapSamples);
 uniform string $(s_mapFilter);
 uniform float $(s_mapFilterWidth);
 uniform float $(s_mapBias); 
 color $(s_gummiFalloff);
 color $(s_tintColor);
   
   if ( $(ShadowName) != "" )
    {
      if ( 0 == surface ( "__mapBlur", $(s_mapBlur) ) ) $(s_mapBlur) = $(mapBlur);
      if ( 0 == surface ( "__mapSamples", $(s_mapSamples) ) ) $(s_mapSamples) = $(samples);
      if ( 0 == surface ( "__mapFilter", $(s_mapFilter) ) ) $(s_mapFilter) = $(filter);
      if ( 0 == surface ( "__mapFilterWidth", $(s_mapFilterWidth) ) ) $(s_mapFilterWidth) = $(width);
      if ( 0 == surface ( "__mapBias", $(s_mapBias) ) ) $(s_mapBias) = $(bias);
      if ( 0 == surface ( "__gummiFalloff", $(s_gummiFalloff) ) ) $(s_gummiFalloff) = $(gummiFalloff);
      if ( 0 == surface ( "__tintColor", $(s_tintColor) ) ) $(s_tintColor) = $(tintColor);
      
      /* The shadow() function internally does a "1-value" transform
      * before returning its value. We need to do our own 1-value
      * to undo that and get the original value. */
      	$(thickness) = 1.0 - (float shadow( $(ShadowName), Ps 
      									,"blur", $(s_mapBlur) 
      									,"samples", $(s_mapSamples)
												,"filter", $(s_mapFilter) 
												,"width", $(s_mapFilterWidth)		
												,"bias", $(s_mapBias)	
      									));
      									
     //  printf("map = %s, thickness = %f\n", ShadowName, thickness );
     
			/* distance-based attenuation of each color channel,
      * which represent different wavelengths. */
       gummiAmount = color(
      
      clamp( exp(-comp(s_gummiFalloff ,0) * thickness), 0, 1),
      clamp( exp(-comp(s_gummiFalloff ,1) * thickness), 0, 1),
      clamp( exp(-comp(s_gummiFalloff ,2) * thickness), 0, 1) );
    }    
   
   __category = $(category);
    __nondiffuse = 1 - $(Diffuse);
    __nonspecular = 1 - $(Specular);
    __shdname = $(ShadowName);
    __gummi_sss = $(Ks) * $(s_tintColor) * $(gummiAmount);

		$(Cl) =  __gummi_sss;

	]]>
	</code>	
</node>
