<!DOCTYPE metal_ibi>
<nodenet author="meShaderEd" name="metal_ibi">
 <help>Short NodeNetwork description</help>
 <nodes>
  <node type="rib" author="mesh" id="1" name="BasicSphere" label="BasicSphere">
   <help>Basic sphere primitive preview RIB</help>
   <input>
    <property provider="attribute" default="256" type="int" value="256" name="Width" label="Image width"/>
    <property provider="attribute" default="256" type="int" value="256" name="Height" label="Image height"/>
    <property provider="attribute" default="1.000" type="float" value="1.000" name="ShadingRate" label="Shading rate"/>
    <property provider="attribute" default="4" type="int" value="4" name="Samples" label="Samples"/>
    <property provider="attribute" default="catmull-rom" range="box:triangle:catmull-rom:gaussian:sinc:blackman-harris:mitchell:separable-catmull-rom:lanczos:bessel" subtype="selector" type="string" value="catmull-rom" name="Filter" label="Filter"/>
    <property provider="attribute" default="2.000" type="float" value="2.000" name="FilterWidth" label="Filter width"/>
    <property provider="attribute" default="0.500" type="float" value="0.500" name="DisplaceBound" label="Displacement Bound"/>
    <property provider="attribute" default="1.250" type="float" value="2.250" name="EnvIntensity" label="EnvLight Intensity"/>
    <property provider="attribute" default="kitchen_LL.hdr.${TEX}" range="All files=*.*:TEX=*.tex:TDL=*.tdl:TIFF=*.tif" subtype="file" type="string" value="kitchen_LL.hdr.${TEX}" name="EnvMap" label="Environment Map"/>
    <property provider="attribute" default="_environment" type="string" value="_environment" name="EnvSpace" label="Coordinate System"/>
    <property provider="attribute" default="0.000 0.000 1.000" type="color" value="0.000 0.000 1.000" name="Color" label="Color"/>
    <property provider="attribute" default="1.000 1.000 1.000" type="color" value="1.000 1.000 1.000" name="Opacity" label="Opacity"/>
    <property default="null" type="displacement" value="null" name="FG_disp" label="FG_disp"/>
    <property default="defaultsurface" type="surface" value="defaultsurface" name="FG_surf" label="FG_surf"/>
    <property default="liquidchecker" type="surface" value="liquidchecker" name="BG_surf" label="BG_surf"/>
   </input>
   <output>
    <property default="${TempPath}/${NODELABEL}.tif" type="image" value="${TempPath}/${NODELABEL}.tif" name="ImageFile" label="ImageFile"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
  Option "searchpath" "shader" "&:@:.:~:${ShaderSearchPath}"
  Option "searchpath" "texture" "&:@:.:~:${TextureSearchPath}"

  Option "user" "float traceBreadthFactor" [1]
  Option "user" "float traceDepthFactor" [1]
  Option "trace" "int maxdepth" 4
  Option "trace" "float specularthreshold" [10]
  Option "trace" "int continuationbydefault" [1]

  Attribute "visibility" "int trace" [1]
  Attribute "visibility" "int transmission" [1]
  Attribute "visibility" "int diffuse" [1]
  Attribute "visibility" "int specular" [1]

  Attribute "trace" "int maxdiffusedepth" [1]
  Attribute "trace" "int maxspeculardepth" [4]

  ### Output image
  Display "$(ImageFile)" "tiff" "rgba"

  Hider "hidden" "int jitter" [1]
  Format $(Width) $(Height) 1.0
  PixelSamples $(Samples) $(Samples)
  PixelFilter "$(Filter)" $(FilterWidth) $(FilterWidth)
  ShadingRate $(ShadingRate)

  Projection "perspective" "fov" 45
  Translate 0 0 3.0

  Attribute "displacementbound" "float sphere" [$(DisplaceBound)]

  WorldBegin

    ReverseOrientation 
	
    TransformBegin
      Rotate -90 1 0 0
      CoordinateSystem "_environment"
    TransformEnd

    LightSource "distantlight" 1 "intensity" 1.0 "from" [-2 2 -3] "to" [0 0 0]
    LightSource "distantlight" 2 "intensity" 0.4 "from" [6 -3 0] "to" [0 0 0]
    LightSource "meEnvLight" 3  "uniform float Intensity" [$(EnvIntensity)] 
                                "uniform string meEnvMap_EnvMap" ["$(EnvMap)"]
                                "uniform string meEnvMap_Space" ["$(EnvSpace)"]

    AttributeBegin 
      Rotate 60 1 0 0

      Color [$(Color)]
      Opacity [$(Opacity)]

      Displacement "$(FG_disp)"
      Surface "$(FG_surf)" 
      
      Sphere 1.0 -1.0 1.0 360 
      
    AttributeEnd 
      
    AttributeBegin 
      Scale 7 7 7
      Translate 0 0 2
      Surface "$(BG_surf)" 
      
      Patch "bilinear" "P" [-1 1 0 1 1 0 -1 -1 0 1 -1 0]
    AttributeEnd  

  WorldEnd
  ]]></code>
   <offset x="68" y="-604"/>
  </node>
  <node type="image" author="mesh" id="2" name="imageViewer" label="imageViewer">
   <help>Single image viewer </help>
   <input>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image" label="image"/>
   </input>
   <output/>
   <internal/>
   <include/>
   <param_code><![CDATA[
#$(output) = $(input)
#import core.imageNode
#import code.nodeParam

print ":: Hello from %s XML code !!!" % self.label
self.imageName = self.getInputParamValueByName ( 'image' ) 


]]></param_code>
   <offset x="331" y="-380"/>
  </node>
  <node type="surface" author="mesh" id="3" name="surface" label="surf">
   <help>Basic surface shader.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="Ci" label="Ci"/>
    <property default="color(1.000,1.000,1.000)" type="color" value="color(1.000,1.000,1.000)" name="Oi" label="Oi"/>
   </input>
   <output>
    <property default="${NODELABEL}" type="surface" value="${NODELABEL}" name="surface" label="surface"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
	  Ci = $(Ci) * $(Oi); 
	  Oi = $(Oi);
	]]></code>
   <offset x="-115" y="-262"/>
  </node>
  <node type="" author="mesh" id="5" name="FaceforwardNormal" label="FaceforwardNormal">
   <help>Faceforward Normalized Normal.</help>
   <input/>
   <output>
    <property default="normal(0.000,0.000,0.000)" type="normal" value="normal(0.000,0.000,0.000)" name="Nf" label="Nf"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
	$(Nf) = faceforward( normalize(N), I );
	]]></code>
   <offset x="-1700" y="7"/>
  </node>
  <node type="image" author="mesh" id="6" name="imageSelector" label="imageSelector">
   <help>Image viewer with additional inputs</help>
   <input>
    <property provider="attribute" default="image" range="image:image1:image2:image3:image4:image5:image6:image7" subtype="selector" type="string" value="image" name="selector" label="Select image"/>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image" label="image"/>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image1" label="image1"/>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image2" label="image2"/>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image3" label="image3"/>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image4" label="image4"/>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image5" label="image5"/>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image6" label="image6"/>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image7" label="image7"/>
   </input>
   <output/>
   <internal/>
   <include/>
   <param_code><![CDATA[
#$(output) = $(input)
#import core.imageNode
#import code.nodeParam

print ":: Hello from %s XML code !!!" % self.label

if self.getInputParamByName ( 'selector' ).value == 'image': self.imageName = self.getInputParamValueByName ( 'image' ) 
if self.getInputParamByName ( 'selector' ).value == 'image1': self.imageName = self.getInputParamValueByName ( 'image1' ) 
if self.getInputParamByName ( 'selector' ).value == 'image2': self.imageName = self.getInputParamValueByName ( 'image2' ) 
if self.getInputParamByName ( 'selector' ).value == 'image3': self.imageName = self.getInputParamValueByName ( 'image3' )
if self.getInputParamByName ( 'selector' ).value == 'image4': self.imageName = self.getInputParamValueByName ( 'image4' ) 
if self.getInputParamByName ( 'selector' ).value == 'image5': self.imageName = self.getInputParamValueByName ( 'image5' )
if self.getInputParamByName ( 'selector' ).value == 'image6': self.imageName = self.getInputParamValueByName ( 'image6' )
if self.getInputParamByName ( 'selector' ).value == 'image7': self.imageName = self.getInputParamValueByName ( 'image7' )


]]></param_code>
   <offset x="393" y="-26"/>
  </node>
  <node type="rib" author="mesh" id="8" name="BasicSphere_aov" label="BasicSphere_aov">
   <help>Basic sphere primitive preview RIB with additional AOV outputs</help>
   <input>
    <property provider="attribute" default="256" type="int" value="256" name="Width" label="Image width"/>
    <property provider="attribute" default="256" type="int" value="256" name="Height" label="Image height"/>
    <property provider="attribute" default="1.000" type="float" value="1.000" name="ShadingRate" label="Shading rate"/>
    <property provider="attribute" default="4" type="int" value="4" name="Samples" label="Samples"/>
    <property provider="attribute" default="catmull-rom" range="box:triangle:catmull-rom:gaussian:sinc:blackman-harris:mitchell:separable-catmull-rom:lanczos:bessel" subtype="selector" type="string" value="catmull-rom" name="Filter" label="Filter"/>
    <property provider="attribute" default="2.000" type="float" value="2.000" name="FilterWidth" label="Filter width"/>
    <property provider="attribute" default="0.500" type="float" value="0.500" name="DisplaceBound" label="Displacement Bound"/>
    <property provider="attribute" default="1.250" type="float" value="1.250" name="EnvIntensity" label="EnvLight Intensity"/>
    <property provider="attribute" default="kitchen_LL.hdr.${TEX}" range="All files=*.*:TEX=*.tex:TDL=*.tdl:TIFF=*.tif" subtype="file" type="string" value="kitchen_LL.hdr.${TEX}" name="EnvMap" label="Environment Map"/>
    <property provider="attribute" default="_environment" type="string" value="_environment" name="EnvSpace" label="Coordinate System"/>
    <property provider="attribute" default="0.000 0.000 1.000" type="color" value="0.000 0.000 1.000" name="Color" label="Color"/>
    <property provider="attribute" default="1.000 1.000 1.000" type="color" value="1.000 1.000 1.000" name="Opacity" label="Opacity"/>
    <property default="null" type="displacement" value="null" name="FG_disp" label="FG_disp"/>
    <property default="defaultsurface" type="surface" value="defaultsurface" name="FG_surf" label="FG_surf"/>
    <property default="liquidchecker" type="surface" value="liquidchecker" name="BG_surf" label="BG_surf"/>
   </input>
   <output>
    <property default="${TempPath}/${NODELABEL}.tif" type="image" value="${TempPath}/${NODELABEL}.tif" name="ImageFile" label="ImageFile"/>
    <property default="${TempPath}/${NODELABEL}.color.tif" type="image" value="${TempPath}/${NODELABEL}.color.tif" name="__color" label="__color"/>
    <property default="${TempPath}/${NODELABEL}.diff.tif" type="image" value="${TempPath}/${NODELABEL}.diff.tif" name="__diff" label="__diff"/>
    <property default="${TempPath}/${NODELABEL}.spec.tif" type="image" value="${TempPath}/${NODELABEL}.spec.tif" name="__spec" label="__spec"/>
    <property default="${TempPath}/${NODELABEL}.diff_ibi.tif" type="image" value="${TempPath}/${NODELABEL}.diff_ibi.tif" name="__diff_ibi" label="__diff_ibi"/>
    <property default="${TempPath}/${NODELABEL}.spec_ibi.tif" type="image" value="${TempPath}/${NODELABEL}.spec_ibi.tif" name="__spec_ibi" label="__spec_ibi"/>
    <property default="${TempPath}/${NODELABEL}.occ.tif" type="image" value="${TempPath}/${NODELABEL}.occ.tif" name="__occ" label="__occ"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
  Option "searchpath" "shader" "&:@:.:~:${ShaderSearchPath}"
  Option "searchpath" "texture" "&:@:.:~:${TextureSearchPath}"

  Option "user" "float traceBreadthFactor" [1]
  Option "user" "float traceDepthFactor" [1]
  Option "trace" "int maxdepth" 4
  Option "trace" "float specularthreshold" [10]
  Option "trace" "int continuationbydefault" [1]

  Attribute "visibility" "int trace" [1]
  Attribute "visibility" "int transmission" [1]
  Attribute "visibility" "int diffuse" [1]
  Attribute "visibility" "int specular" [1]

  Attribute "trace" "int maxdiffusedepth" [1]
  Attribute "trace" "int maxspeculardepth" [4]

  #Display Channels:
  DisplayChannel "color __color" "int[4] quantize" [ 0 255 0 255 ] "float dither" [0.5] "string filter" ["$(Filter)"] "float filterwidth[2]" [$(FilterWidth) $(FilterWidth)]
  DisplayChannel "color __diff" "int[4] quantize" [ 0 255 0 255 ] "float dither" [0.5] "string filter" ["$(Filter)"] "float filterwidth[2]" [$(FilterWidth) $(FilterWidth)]
  DisplayChannel "color __spec" "int[4] quantize" [ 0 255 0 255 ] "float dither" [0.5] "string filter" ["$(Filter)"] "float filterwidth[2]" [$(FilterWidth) $(FilterWidth)]
  DisplayChannel "color __diff_ibi" "int[4] quantize" [ 0 255 0 255 ] "float dither" [0.5] "string filter" ["$(Filter)"] "float filterwidth[2]" [$(FilterWidth) $(FilterWidth)]
  DisplayChannel "color __spec_ibi" "int[4] quantize" [ 0 255 0 255 ] "float dither" [0.5] "string filter" ["$(Filter)"] "float filterwidth[2]" [$(FilterWidth) $(FilterWidth)]
  DisplayChannel "float __occ" "int[4] quantize" [ 0 255 0 255 ] "float dither" [0.5] "string filter" ["$(Filter)"] "float filterwidth[2]" [$(FilterWidth) $(FilterWidth)]

  ### Output image
  Display "$(ImageFile)" "tiff" "rgba"
  Display "+$(__color)" "tiff" "__color"
  Display "+$(__diff)" "tiff" "__diff"
  Display "+$(__spec)" "tiff" "__spec"
  Display "+$(__diff_ibi)" "tiff" "__diff_ibi"
  Display "+$(__spec_ibi)" "tiff" "__spec_ibi"
  Display "+$(__occ)" "tiff" "__occ"


  Hider "hidden" "int jitter" [1]
  Format $(Width) $(Height) 1.0
  PixelSamples $(Samples) $(Samples)
  PixelFilter "$(Filter)" $(FilterWidth) $(FilterWidth)
  ShadingRate $(ShadingRate)

  Projection "perspective" "fov" 45
  Translate 0 0 3.0

  Attribute "displacementbound" "float sphere" [$(DisplaceBound)]

  WorldBegin

    ReverseOrientation 
	
    TransformBegin
      Rotate -90 1 0 0
      CoordinateSystem "_environment"
    TransformEnd

    LightSource "distantlight" 1 "intensity" 1.0 "from" [-2 2 -3] "to" [0 0 0]
    LightSource "distantlight" 2 "intensity" 0.4 "from" [6 -3 0] "to" [0 0 0]
    LightSource "meEnvLight" 3  "uniform float Intensity" [$(EnvIntensity)] 
                                "uniform string meEnvMap_EnvMap" ["$(EnvMap)"]
                                "uniform string meEnvMap_Space" ["$(EnvSpace)"]

    AttributeBegin 
      Rotate 60 1 0 0

      Color [$(Color)]
      Opacity [$(Opacity)]

      Displacement "$(FG_disp)"
      Surface "$(FG_surf)" 
      
      Sphere 1.0 -1.0 1.0 360 
      
    AttributeEnd 
      
    AttributeBegin 
      Scale 7 7 7
      Translate 0 0 2
      Surface "$(BG_surf)" 
      
      Patch "bilinear" "P" [-1 1 0 1 1 0 -1 -1 0 1 -1 0]
    AttributeEnd 

  WorldEnd
	]]></code>
   <offset x="138" y="-62"/>
  </node>
  <node type="rib" author="mesh" id="10" name="BasicTeapot" label="BasicTeapot">
   <help>Basic Teapot primitive preview RIB</help>
   <input>
    <property provider="attribute" default="256" type="int" value="256" name="Width" label="Image width"/>
    <property provider="attribute" default="256" type="int" value="256" name="Height" label="Image height"/>
    <property provider="attribute" default="1.000" type="float" value="1.000" name="ShadingRate" label="Shading rate"/>
    <property provider="attribute" default="4" type="int" value="4" name="Samples" label="Samples"/>
    <property provider="attribute" default="catmull-rom" range="box:triangle:catmull-rom:gaussian:sinc:blackman-harris:mitchell:separable-catmull-rom:lanczos:bessel" subtype="selector" type="string" value="catmull-rom" name="Filter" label="Filter"/>
    <property provider="attribute" default="2.000" type="float" value="2.000" name="FilterWidth" label="Filter width"/>
    <property provider="attribute" default="0.500" type="float" value="0.500" name="DisplaceBound" label="Displacement Bound"/>
    <property provider="attribute" default="1.250" type="float" value="1.250" name="EnvIntensity" label="EnvLight Intensity"/>
    <property provider="attribute" default="kitchen_LL.hdr.${TEX}" range="All files=*.*:TEX=*.tex:TDL=*.tdl:TIFF=*.tif" subtype="file" type="string" value="ClassicKitchen.hdr.${TEX}" name="EnvMap" label="Environment Map"/>
    <property provider="attribute" default="_environment" type="string" value="_environment" name="EnvSpace" label="Coordinate System"/>
    <property provider="attribute" default="0.000 0.000 1.000" type="color" value="0.000 0.000 1.000" name="Color" label="Color"/>
    <property provider="attribute" default="1.000 1.000 1.000" type="color" value="1.000 1.000 1.000" name="Opacity" label="Opacity"/>
    <property provider="attribute" default="0" range="0 360 1" subtype="slider" type="int" value="0" name="RotateY" label="RotateY"/>
    <property default="null" type="displacement" value="null" name="FG_disp" label="FG_disp"/>
    <property default="defaultsurface" type="surface" value="defaultsurface" name="FG_surf" label="FG_surf"/>
    <property default="liquidchecker" type="surface" value="liquidchecker" name="BG_surf" label="BG_surf"/>
   </input>
   <output>
    <property default="${TempPath}/${NODELABEL}.tif" type="image" value="${TempPath}/${NODELABEL}.tif" name="ImageFile" label="ImageFile"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
  Option "searchpath" "shader" "&:@:.:~:${ShaderSearchPath}"
  Option "searchpath" "texture" "&:@:.:~:${TextureSearchPath}"

  Option "user" "float traceBreadthFactor" [1]
  Option "user" "float traceDepthFactor" [1]
  Option "trace" "int maxdepth" 4
  Option "trace" "float specularthreshold" [10]
  Option "trace" "int continuationbydefault" [1]

  Attribute "visibility" "int trace" [1]
  Attribute "visibility" "int transmission" [1]
  Attribute "visibility" "int diffuse" [1]
  Attribute "visibility" "int specular" [1]

  Attribute "trace" "int maxdiffusedepth" [1]
  Attribute "trace" "int maxspeculardepth" [4]



  Hider "hidden" "int jitter" [1]
  Format $(Width) $(Height) 1.0
  PixelSamples $(Samples) $(Samples)
  PixelFilter "$(Filter)" $(FilterWidth) $(FilterWidth)
  ShadingRate $(ShadingRate)

  ### Output image
  Display "$(ImageFile)" "tiff" "rgba" 

  ### "filterwidth" [$(FilterWidth) $(FilterWidth)]

  Projection "perspective" "fov" 45
  Translate 0 0 3.0

  Attribute "displacementbound" "float sphere" [$(DisplaceBound)]

  WorldBegin

    ReverseOrientation 
	
    TransformBegin
      Rotate -90 1 0 0
      CoordinateSystem "_environment"
    TransformEnd

    LightSource "distantlight" 1 "intensity" 1.0 "from" [-2 2 -3] "to" [0 0 0]
    LightSource "distantlight" 2 "intensity" 0.4 "from" [6 -3 0] "to" [0 0 0]
    LightSource "meEnvLight" 3  "uniform float Intensity" [$(EnvIntensity)] 
                                "uniform string meEnvMap_EnvMap" ["$(EnvMap)"]
                                "uniform string meEnvMap_Space" ["$(EnvSpace)"]

      
    AttributeBegin
      Color [$(Color)]
      Opacity [$(Opacity)]
      
      Rotate $(RotateY) 0 1 0 
      
      AttributeBegin
        Scale 0.35 0.35 0.35
        Translate -0.6 -1 0
        Rotate 120 -1 0 0
        Rotate 30 0 0 1
  
        Displacement "$(FG_disp)"
        Surface "$(FG_surf)" 
        Geometry "teapot"
      AttributeEnd
    AttributeEnd 
      
    AttributeBegin 
      Scale 7 7 7
      Translate 0 0 2
      Surface "$(BG_surf)" 
      
      Patch "bilinear" "P" [-1 1 0 1 1 0 -1 -1 0 1 -1 0]
    AttributeEnd 

  WorldEnd
	]]></code>
   <offset x="87" y="-277"/>
  </node>
  <node type="" author="Pixar" id="11" name="FacingForward" label="ffwd">
   <help>A function that computes the degree to which
the normal of a surface faces the camera.  You can
use this function to fade the opacity of objects
near the edges of your objects.  Results
range from -1 (facing away from camera) to 1 (facing
toward the camera). Use the Abs and Clamp parameters to
control result of the function.</help>
   <input>
    <property default="1.000" subtype="switch" type="float" value="1.000" name="Abs" label="Abs">
     <help>Takes the absolute value of result.
		  This means that surfaces that face away from the camera will be treated as though
		  they face toward it.
		</help>
    </property>
    <property default="1.000" subtype="switch" type="float" value="1.000" name="Clamp" label="Clamp">
     <help>Clamps the result between 0 and 1.
		   If the Abs parameter is disabled, all backfacing surfaces will result in black.
		</help>
    </property>
    <property default="1.000" subtype="switch" type="float" value="1.000" name="Invert" label="Invert">
     <help>Performs an inversion of the results as defined by 1 - result. 
			Behavior will vary with the setting of the Abs and Clamp parameters.
		</help>
    </property>
    <property default="1.000" shaderParam="1" type="float" value="1.000" name="Attenuation" label="Attenuation">
     <help>Controls the rate of falloff with angle.
		</help>
    </property>
   </input>
   <output>
    <property default="0.000" type="float" value="0.000" name="result" label="result"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
	float cosangle = normalize(-I).normalize(N);
	if( cosangle < 0)
		$(result) = -pow(-cosangle, $(Attenuation));
	else
		$(result) = pow(cosangle, $(Attenuation));
	if( $(Abs) != 0 )
		$(result) = abs($(result));
	if( $(Clamp) != 0 )
	 	$(result) = clamp($(result), 0, 1);
	if( $(Invert) != 0 )
		$(result) = 1 - $(result);
  ]]></code>
   <offset x="-1347" y="-538"/>
  </node>
  <node type="" author="Libero Spagnolini" id="12" name="mixC" label="base_color">
   <help>Mix two colors.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" shaderParam="1" type="color" value="color(0.745,0.745,0.745)" name="inColor1" label="inColor1"/>
    <property default="color(0.000,0.000,0.000)" shaderParam="1" type="color" value="color(0.208,0.208,0.208)" name="inColor2" label="inColor2"/>
    <property default="0.000" type="float" value="0.000" name="factor" label="factor"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="outColor" label="outColor"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
$(outColor) = mix(($(inColor1)), ($(inColor2)), ($(factor)));
]]></code>
   <offset x="-1190" y="-535"/>
  </node>
  <node type="surface" author="mesh" id="13" name="surface" label="surf0">
   <help>Basic surface shader.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="Ci" label="Ci"/>
    <property default="color(1.000,1.000,1.000)" type="color" value="color(1.000,1.000,1.000)" name="Oi" label="Oi"/>
   </input>
   <output>
    <property default="${NODELABEL}" type="surface" value="${NODELABEL}" name="surface" label="surface"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
	  Ci = $(Ci) * $(Oi); 
	  Oi = $(Oi);
	]]></code>
   <offset x="-125" y="-414"/>
  </node>
  <node type="" author="mesh" id="14" name="compAddC" label="comp_spec_ibi">
   <help>Add 'BG' and 'mult' * 'FG' colors.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="BG" label="BG"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="FG" label="FG"/>
    <property provider="external" default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="1.000" name="mult" label="mult"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="out" label="out"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[

	$(out) = $(BG)  + $(mult) * $(FG);
	
	]]></code>
   <offset x="-514" y="-283"/>
  </node>
  <node type="" author="mesh" id="15" name="me_diff_ibi" label="diff_ibi">
   <help></help>
   <input>
    <property default="normal(0.000,0.000,0.000)" type="normal" value="normal(0.000,0.000,0.000)" name="N" label="N"/>
    <property default="environment" type="string" value="environment" name="category" label="category"/>
    <property default="0.700" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.750" name="dBlur" label="dBlur"/>
    <property default="0.800" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.750" name="Kd" label="Kd"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="result" label="result"/>
    <property detail="varying" provider="primitive" default="vector(0.000,0.000,1.000)" type="vector" value="vector(0.000,0.000,1.000)" name="__L" label="__L"/>
    <property detail="varying" provider="primitive" default="0.000" type="float" value="0.000" name="__blur" label="__blur"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
	
	__L = vector ( $(N) );
  __blur = $(dBlur);
	
	  
	illuminance ( $(category), P,  "lightcache", "refresh" ) 
  {
    $(result) += Cl;
  }     

  $(result) *= $(Kd);
			
  ]]></code>
   <offset x="-1503" y="-307"/>
  </node>
  <node type="" author="Libero Spagnolini" id="16" name="addC" label="diff_ibi_add">
   <help>Add two colors.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="inColor1" label="inColor1"/>
    <property default="color(0.000,0.000,0.000)" shaderParam="1" type="color" value="color(0.400,0.400,0.400)" name="inColor2" label="inColor2"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="outColor" label="outColor"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
 $(outColor) = $(inColor1) + $(inColor2);
]]></code>
   <offset x="-1355" y="-308"/>
  </node>
  <node type="" author="mesh" id="18" name="clampC" label="diff_ibi_clamp">
   <help>
	clamp(input,min,max) returns "min:  if "input" is less than "min", "max" if a is greater than "max"; 
	otherwise it returns "input"
	</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="input" label="input"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="min" label="min"/>
    <property default="color(1.000,1.000,1.000)" type="color" value="color(1.000,1.000,1.000)" name="max" label="max"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="result" label="result"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
 $(result) = clamp(($(input)), ($(min)), ($(max)));
]]></code>
   <offset x="-1230" y="-319"/>
  </node>
  <node type="" author="mesh" id="19" name="compMultC" label="comp_diff_ibi">
   <help>Multiple 'BG' and 'mult' * 'FG' colors.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="BG" label="BG"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="FG" label="FG"/>
    <property provider="external" default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.480" name="mult" label="mult"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="out" label="out"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[

	$(out) = $(BG) * ( (1 - $(mult)) + $(mult) * $(FG) );
	
	]]></code>
   <offset x="-939" y="-531"/>
  </node>
  <node type="" author="mesh" id="22" name="compMultC" label="comp_diff">
   <help>Multiple 'BG' and 'mult' * 'FG' colors.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="BG" label="BG"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="FG" label="FG"/>
    <property provider="external" default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.840" name="mult" label="mult"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="out" label="out"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[

	$(out) = $(BG) * ( (1 - $(mult)) + $(mult) * $(FG) );
	
	]]></code>
   <offset x="-782" y="-430"/>
  </node>
  <node type="" author="mesh" id="24" name="compAddC" label="comp_spec">
   <help>Add 'BG' and 'mult' * 'FG' colors.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="BG" label="BG"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="FG" label="FG"/>
    <property provider="external" default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="1.000" name="mult" label="mult"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="out" label="out"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[

	$(out) = $(BG)  + $(mult) * $(FG);
	
	]]></code>
   <offset x="-639" y="-354"/>
  </node>
  <node type="" author="mesh" id="26" name="saturation" label="spec_ibi_sat">
   <help>Controls the color sauration value</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="input" label="input"/>
    <property default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.490" name="value" label="value"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="result" label="result"/>
   </output>
   <internal>
    <variable name="lum"/>
   </internal>
   <include/>
   <code><![CDATA[
	float $(lum) = .2125*comp( $(input), 0) + .7154*comp($(input), 1) + .0721*comp($(input), 2);
	$(result) = mix( color( $(lum) ), $(input), $(value) );
	]]></code>
   <offset x="-814" y="-14"/>
  </node>
  <node type="" author="mesh" id="27" name="saturation" label="diff_ibi_sat">
   <help>Controls the color sauration value</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="input" label="input"/>
    <property default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.380" name="value" label="value"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="result" label="result"/>
   </output>
   <internal>
    <variable name="lum"/>
   </internal>
   <include/>
   <code><![CDATA[
	float $(lum) = .2125*comp( $(input), 0) + .7154*comp($(input), 1) + .0721*comp($(input), 2);
	$(result) = mix( color( $(lum) ), $(input), $(value) );
	]]></code>
   <offset x="-1077" y="-389"/>
  </node>
  <node type="" author="mesh" id="28" name="me_diff" label="diff">
   <help>Diffuse function with extra controls</help>
   <input>
    <property default="normal(0.000,0.000,0.000)" type="normal" value="normal(0.000,0.000,0.000)" name="N" label="N"/>
    <property default="" type="string" value="" name="category" label="category">
     <help></help>
    </property>
    <property default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.490" name="Kd" label="Kd">
     <help></help>
    </property>
    <property default="1.000" range="0 1 0.01" subtype="slider" type="float" value="1.000" name="atten" label="atten">
     <help></help>
    </property>
    <property default="0.000" range="0 1 0.01" subtype="slider" type="float" value="0.000" name="from" label="from">
     <help></help>
    </property>
    <property default="1.000" range="0 1 0.01" subtype="slider" type="float" value="1.000" name="to" label="to">
     <help></help>
    </property>
    <property default="color(1.000,1.000,1.000)" type="color" value="color(1.000,1.000,1.000)" name="coloration" label="coloration">
     <help></help>
    </property>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="result" label="result"/>
   </output>
   <internal>
    <variable name="diffColor"/>
    <variable name="hueComp"/>
    <variable name="satComp"/>
    <variable name="lumiComp"/>
    <variable name="hsvDiff"/>
   </internal>
   <include/>
   <code><![CDATA[
	
	color $(diffColor) = 0;
              
	illuminance ( $(category), P, $(N), PI/2, "lightcache", "refresh" ) 
	{
		float nondiff = 0;
		lightsource( "__nondiffuse", nondiff );
		if (nondiff < 1)
			$(diffColor) += ( 1 - nondiff ) * Cl *( $(N).normalize(L) );
	}
	
	float $(hueComp) = comp( ctransform( "hsv" , $(diffColor) ) , 0 );
	float $(satComp) = comp( ctransform( "hsv" , $(diffColor) ), 1 );
	float $(lumiComp) = comp( ctransform( "hsv" , $(diffColor) ), 2 ); /*  get value component from HSV color space */
	color $(hsvDiff) = color "hsv" ( $(hueComp), $(satComp), ( $(from) + ( $(to) - $(from) ) * pow( $(lumiComp), $(atten) ) ) );
  
	$(result) = $(coloration) * $(Kd) * $(hsvDiff);
			
  ]]></code>
   <offset x="-1214" y="-178"/>
  </node>
  <node type="" author="mesh" id="29" name="me_blinn" label="blinn">
   <help>Blinn specular function</help>
   <input>
    <property default="normal(0.000,0.000,0.000)" type="normal" value="normal(0.000,0.000,0.000)" name="N" label="N"/>
    <property default="" type="string" value="" name="category" label="category"/>
    <property default="color(1.000,1.000,1.000)" type="color" value="color(1.000,1.000,1.000)" name="specColor" label="specColor"/>
    <property default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="1.000" name="Ks" label="Ks"/>
    <property default="0.300" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.300" name="eccentricity" label="eccentricity"/>
    <property default="0.700" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.700" name="specularRollOff" label="specularRollOff"/>
    <property default="1.000" range="0 1 0.01" subtype="slider" type="float" value="1.000" name="reflectivity" label="reflectivity"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="result" label="result"/>
   </output>
   <internal>
    <variable name="R"/>
    <variable name="E"/>
    <variable name="V"/>
    <variable name="VN"/>
    <variable name="C"/>
    <variable name="Cr"/>
   </internal>
   <include/>
   <code><![CDATA[
  
  vector $(R) = reflect( normalize(I), normalize( $(N) ) );
  vector $(V) = normalize(-I);
  float $(VN) = $(V).$(N);
  color $(C) = 0, $(Cr) = 0;
  float $(E) = 0;
  
  if ( $(eccentricity) != 1 )
    $(E) = 1 / ( $(eccentricity) * $(eccentricity) - 1);
  else
    $(E) = -1e5;
  
  illuminance( $(category), P, $(N), PI/2, "lightcache", "refresh" )
  {
    vector H, Ln;
    float nondiff, nonspec;
    float NH, NH2, NHSQ, Dd, Gg, VH, LN, Ff, tmp;
    
    if( 0 == lightsource("__nonspecular", nonspec) )
      nonspec = 0;
    if( nonspec < 1 )
    {
      Ln = normalize(L);
      H = normalize( Ln + $(V) );
      NH = $(N).H;
      NHSQ = NH * NH;
      NH2 = NH * 2;
      Dd = ( $(E) + 1 ) / ( NHSQ + $(E) );
      Dd *= Dd;
      VH = $(V).H;
      LN = Ln.$(N);
      if( $(VN) < LN )
      {
        if( $(VN) * NH2 < VH )
          Gg = NH2 / VH;
        else
          Gg = 1 / $(VN);
      }
      else
      {
        if( LN * NH2 < VH )
          Gg = (LN * NH2) / (VH * $(VN));
        else
          Gg = 1 / $(VN);
      }
      /* poor man's Fresnel */
      tmp = pow((1 - VH), 3);
      Ff = tmp + (1 - tmp) * $(specularRollOff);
      $(C) += Cl * Dd * Gg * Ff;
    
      /* now look for environment reflections.  
         These are indicated by lights which are specular AND nondiffuse 
      */
      if( 0 != lightsource( "__nondiffuse", nondiff ) )
      {
        $(Cr) += ( 1 - nonspec ) * nondiff * Ff * Cl;
      }
    }
  }
     
 $(result) = $(Ks) * $(specColor) * ( $(C) + $(reflectivity) * $(Cr) );
  
  ]]></code>
   <offset x="-989" y="-182"/>
  </node>
  <node type="" author="mesh" id="30" name="me_spec_ibi" label="spec_ibi">
   <help>Specular component with IBI (Image Based Illumination)</help>
   <input>
    <property default="normal(0.000,0.000,0.000)" type="normal" value="normal(0.000,0.000,0.000)" name="N" label="N"/>
    <property default="environment" type="string" value="environment" name="category" label="category"/>
    <property default="0.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.000" name="rBlur" label="rBlur"/>
    <property default="0.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.430" name="KrMin" label="KrMin"/>
    <property default="0.250" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.880" name="KrMax" label="KrMax"/>
    <property default="1.500" shaderParam="1" range="0 5 0.01" subtype="slider" type="float" value="1.500" name="IOR" label="IOR"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="result" label="result"/>
    <property detail="varying" provider="primitive" default="vector(0.000,0.000,1.000)" type="vector" value="vector(0.000,0.000,1.000)" name="__L" label="__L"/>
    <property detail="varying" provider="primitive" default="0.000" type="float" value="0.000" name="__blur" label="__blur"/>
   </output>
   <internal>
    <variable name="Kr"/>
    <variable name="R"/>
    <variable name="V"/>
   </internal>
   <include/>
   <code><![CDATA[

  float $(Kr) = $(KrMax);
	vector $(R) = vector (0);
	vector $(V) = normalize( I );  
  
  if ( $(IOR) > 0 )
	{
    vector T;
    float Kt;
    float f = max( $(IOR), 1.0e-4 );
    fresnel( $(V), $(N), ( I.$(N) < 0 ) ? 1.0/f : $(IOR) , $(Kr), Kt, $(R), T );
    $(Kr) = mix( $(KrMin), $(KrMax), $(Kr) );
	}
	else
	{
    $(R) = reflect( $(V), $(N) );
	}
  
  __L = $(R);
  __blur = $(rBlur);
  /* P = P; dirty light cache */
  illuminance ( $(category), P, "lightcache", "refresh" ) /* , "lightcache", "refresh" */
  {
    $(result) += Cl;
  }     

  $(result) *= $(Kr);
			
  ]]></code>
   <offset x="-991" y="4"/>
  </node>
  <node type="" author="mesh" id="31" name="ShadingNormal" label="ShadingNormal">
   <help>Calculate Shading Normal.</help>
   <input/>
   <output>
    <property default="normal(0.000,0.000,0.000)" type="normal" value="normal(0.000,0.000,0.000)" name="NS" label="NS"/>
   </output>
   <internal>
    <variable name="depth"/>
   </internal>
   <include/>
   <code><![CDATA[
	$(NS) = normalize(N);
	uniform float $(depth);
	
	rayinfo("depth", $(depth));
	if ( $(depth) > 0 )
		$(NS) = faceforward( $(NS), I, $(NS));
	else
	{
		uniform float sides = 2;
		attribute( "Sides", sides );
		if  (sides == 2 )
		  $(NS) = faceforward( $(NS), I, $(NS) );
	}	    
	
	]]></code>
   <offset x="-993" y="223"/>
  </node>
  <node type="" author="mesh" id="32" name="me_occlusion" label="occlusion">
   <help>Occlusion function with most supporting parameters (including specific for 3Delight, Pixie and Air ) </help>
   <input>
    <property default="normal(0.000,0.000,0.000)" type="normal" value="normal(0.000,0.000,0.000)" name="N" label="N"/>
    <property detail="uniform" default="1.000" subtype="switch" type="float" value="0.000" name="Invert" label="Invert"/>
    <property detail="uniform" default="1.000" subtype="switch" type="float" value="1.000" name="Adaptive" label="Adaptive"/>
    <property detail="uniform" default="128.000" shaderParam="1" range="1 512 1" subtype="slider" type="float" value="128.000" name="MaxSamples" label="MaxSamples"/>
    <property detail="uniform" default="64.000" shaderParam="1" range="1 512 1" subtype="slider" type="float" value="64.000" name="MinSamples" label="MinSamples"/>
    <property detail="uniform" default="-1.000" shaderParam="1" type="float" value="1.000" name="MaxDist" label="MaxDist"/>
    <property detail="uniform" default="vector(0.000,1.000,0.000)" type="vector" value="vector(0.000,1.000,0.000)" name="SkyAxis" label="SkyAxis"/>
    <property default="90.000" type="float" value="90.000" name="ConeAngle" label="ConeAngle"/>
    <property detail="uniform" default="0.000" type="float" value="0.000" name="SampleBase" label="SampleBase">
     <help>specifies the (float) jittering of the hemisphere ray origins. 
		The default value is 0 (no jittering). 
		A value of 1 corresponds to jittering over the size of a micropolygon. 
		This is useful to smooth out aliased occlusion next to edges.</help>
    </property>
    <property detail="uniform" default="0.050" shaderParam="1" range="0.0 5.0 .001" subtype="slider" type="float" value="0.050" name="Bias" label="Bias"/>
    <property detail="uniform" default="default" range="default:primitive:shader" subtype="selector" type="string" value="default" name="HitMode" label="HitMode"/>
    <property detail="uniform" default="both" range="both:front:back" subtype="selector" type="string" value="both" name="HitSides" label="HitSides"/>
    <property detail="uniform" default="0.150" type="float" value="0.150" name="MaxVar" label="MaxVar"/>
    <property detail="uniform" default="-1.000" type="float" value="-1.000" name="MaxError" label="MaxError"/>
    <property detail="uniform" default="0.000" type="float" value="0.000" name="MaxPixelDist" label="MaxPixelDist">
     <help>specifies an error metric to control quality/speed tradeoff for occlusion calculations.  
		If set to zero, the occlusion will be computed at every shading point; 
		no attempt at interpolation will be made.  
		maxpixeldist is used in conjunction with maxerror or maxvariation 
		and provides a screen-based metric to limit artifacts associated with interpolation. 
		If not provided or if set to a negative value, the value of the attribute: 
		"irradiance" "maxpixeldist" is used. </help>
    </property>
    <property detail="uniform" default="cosine" range="cosine:uniform" subtype="selector" type="string" value="cosine" name="Distribution" label="Distribution"/>
    <property detail="uniform" default="0.000" range="exp(-falloff*dist)=0:(1 - dist/maxdist)^falloff=1" subtype="selector" type="float" value="0.000" name="FalloffMode" label="FalloffMode"/>
    <property detail="uniform" default="0.000" type="float" value="0.000" name="FalloffValue" label="FalloffValue"/>
    <property detail="uniform" default="" type="string" value="" name="EnvMap" label="EnvMap"/>
    <property detail="uniform" default="" type="string" value="" name="EnvSpace" label="EnvSpace"/>
    <property detail="uniform" default="1.000" subtype="switch" type="float" value="1.000" name="BrtWarp" label="BrtWarp"/>
    <property detail="uniform" default="" type="string" value="" name="coordsys" label="coordsys"/>
    <property detail="uniform" default="" type="string" value="" name="subset" label="subset"/>
    <property detail="uniform" default="" type="string" value="" name="label" label="label"/>
    <property detail="uniform" default="-1.000" type="float" value="-1.000" name="seed" label="seed">
     <help>frame-dependent random directions seed. 
		If "seed" is set to a fixed non-negative number, 
		the ray directions from each point will be fixed from frame to frame. 
		If "seed" is set to -1 (the default) or the frame number, 
		the directions will change from frame to frame. 
		(Ignored for point-based calculations.)</help>
    </property>
    <property detail="uniform" default="0.000" subtype="switch" type="float" value="0.000" name="pointbased" label="pointbased"/>
    <property detail="uniform" default="" type="string" value="" name="PtcFile" label="PtcFile"/>
    <property detail="uniform" default="0.100" type="float" value="0.100" name="MaxSolidAngle" label="MaxSolidAngle"/>
    <property detail="uniform" default="1.000" subtype="switch" type="float" value="1.000" name="clamp" label="clamp"/>
   </input>
   <output>
    <property default="0.000" type="float" value="0.000" name="result" label="result"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="env_color" label="env_color"/>
    <property default="vector(0.000,0.000,1.000)" type="vector" value="vector(0.000,0.000,1.000)" name="bent_dir" label="bent_dir"/>
   </output>
   <internal>
    <variable name="occ_C"/>
   </internal>
   <include/>
   <code><![CDATA[
  
	/* extern point P; */
  /* extern normal N; */
  /* normal Nss = meShadingNormal( N ); */
  
  /* if ( $(MaxDist) == -1 )
	  $(MaxDist) = 1.0e38; */
	
	#ifdef AIR  
   color $(occ_C) = occlusion( P  
              ,$(N) 
              ,radians( $(ConeAngle) )
              ,bent_dir
              ,"samples",       $(MaxSamples)
              /* ,"blur", mapblur */
              ,"bias",          $(Bias)
              ,"label",         $(label)
              ,"subset",        $(subset)
              ,"maxdist",       $(MaxDist)
              ,"maxerror",      $(MaxError) 
              ,"maxpixeldist",  MaxPixelDist );
             $(result) = comp( $(occ_C), 0 ); 
#else                           
   #ifdef PIXIE
   $(result) = occlusion( P  
              ,$(N)            
              ,$(MaxSamples)
              ,"irradiance",    $(env_color) /* The irradiance amount (output)  */
              /*,"minR",          MaxPixelDist  uniform float minR	 The closest distance between samples. */
              /*,"maxR",          MaxPixelDist uniform float maxR	The maximum distance between samples. */
              ,"bias",          $(Bias)
              ,"maxdist",       $(MaxDist) );
   #else
   $(result) = occlusion( P  
              ,$(N)            
              ,$(MaxSamples)
              ,"adaptive",      $(Adaptive)
              ,"minsamples",    $(MinSamples)
              ,"maxdist",       $(MaxDist)
  #ifdef DELIGHT             
              ,"axis",          $(SkyAxis)
  #endif              
              ,"coneangle",     radians( $(ConeAngle) )
              ,"samplebase",    $(SampleBase)
              ,"bias",          $(Bias)
              ,"hitmode",       $(HitMode)
              ,"hitsides",      $(HitSides)
              ,"maxvariation",  $(MaxVar)
  #ifndef DELIGHT              
              ,"maxerror",      $(MaxError)
              ,"maxpixeldist",  $(MaxPixelDist)
              ,"seed",          $(seed)
              ,"brightnesswarp",  $(BrtWarp)
  #endif               
              ,"distribution",  $(Distribution)
              ,"falloffmode",   $(FalloffMode)
              ,"falloff",       $(FalloffValue)
              
              ,"environmentmap",    $(EnvMap)
              ,"environmentspace",  $(EnvSpace)
              
              ,"coordsystem",   $(coordsys)
              ,"subset",        $(subset)
              ,"label",         $(label)

              ,"pointbased",    $(pointbased)
              ,"filename",      $(PtcFile)
              ,"maxsolidangle", $(MaxSolidAngle)
              ,"clamp",         $(clamp)
              
              ,"environmentcolor",  $(env_color)
              ,"environmentdir",    $(bent_dir) );

  #endif /* PIXIE */             
#endif  /* AIR */           
              
  if ( $(Invert) == 1 )              
    $(result) = 1 - $(result);            
  ]]></code>
   <offset x="-796" y="158"/>
  </node>
  <node type="" author="mesh" id="33" name="compMultInvC" label="comp_occ">
   <help>Multiple 'BG' and inverted 'FG' multiplied with 'mult' colors.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="BG" label="BG"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="FG" label="FG"/>
    <property provider="external" default="1.000" shaderParam="1" range="0 1 0.01" subtype="slider" type="float" value="0.350" name="mult" label="mult"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="out" label="out"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[

	$(out) = $(BG) * ( (1 - $(mult)) + $(mult) * ( 1 - $(FG) ) );
	
	]]></code>
   <offset x="-366" y="-202"/>
  </node>
  <node type="" author="" id="34" name="floatToColor" label="floatToColor">
   <help>Float to color converter.</help>
   <input>
    <property default="1.000" type="float" value="1.000" name="inFloat" label="inFloat"/>
   </input>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="outColor" label="outColor"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
	  $(outColor) = color($(inFloat), $(inFloat), $(inFloat));
	  ]]></code>
   <offset x="-580" y="98"/>
  </node>
  <node type="surface" author="mesh" id="35" name="surface_aov" label="metal_ibi">
   <help>Root surface shader with predefined base AOVs.</help>
   <input>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="Ci" label="Ci"/>
    <property default="color(1.000,1.000,1.000)" type="color" value="color(1.000,1.000,1.000)" name="Oi" label="Oi"/>
    <property provider="attribute" default="1.000" subtype="switch" type="float" value="1.000" name="Premultiply" label="Premultiply"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="color" label="color"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="diff" label="diff"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="spec" label="spec"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="diff_ibi" label="diff_ibi"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="spec_ibi" label="spec_ibi"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="shadow" label="shadow"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="reflect" label="reflect"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="sss" label="sss"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="pstrace" label="pstrace"/>
    <property default="0.000" type="float" value="0.000" name="occ" label="occ"/>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="occ_C" label="occ_C"/>
    <property default="1.000" type="float" value="1.000" name="mask" label="mask"/>
    <property default="color(1.000,0.000,0.000)" type="color" value="color(1.000,0.000,0.000)" name="mask_C" label="mask_C"/>
    <property default="color(1.000,0.000,0.000)" type="color" value="color(1.000,0.000,0.000)" name="extra_C" label="extra_C"/>
    <property default="1.000" type="float" value="1.000" name="extra_F" label="extra_F"/>
   </input>
   <output>
    <property default="${NODELABEL}" type="surface" value="${NODELABEL}" name="surface" label="surface"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__color" label="__color"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__diff" label="__diff"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__spec" label="__spec"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__diff_ibi" label="__diff_ibi"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__spec_ibi" label="__spec_ibi"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__shadow" label="__shadow"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__reflect" label="__reflect"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__sss" label="__sss"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__pstrace" label="__pstrace"/>
    <property detail="varying" provider="primitive" default="0.000" type="float" value="0.000" name="__occ" label="__occ"/>
    <property detail="varying" provider="primitive" default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="__occ_C" label="__occ_C"/>
    <property detail="varying" provider="primitive" default="1.000" type="float" value="1.000" name="__mask" label="__mask"/>
    <property detail="varying" provider="primitive" default="color(1.000,0.000,0.000)" type="color" value="color(1.000,0.000,0.000)" name="__mask_C" label="__mask_C"/>
   </output>
   <internal>
    <variable name="dummy_C"/>
    <variable name="dummy_F"/>
   </internal>
   <include/>
   <code><![CDATA[
	Ci = $(Ci) * $(Oi); 
	Oi = $(Oi);
	__color = $(color) * $(Oi);
	__diff = $(diff) * $(Oi);
	__spec = $(spec) * $(Oi);
	__diff_ibi = $(diff_ibi) * $(Oi);
	__spec_ibi = $(spec_ibi) * $(Oi);
	__shadow = $(shadow) * $(Oi);
	__reflect = $(reflect) * $(Oi);
	__sss = $(sss) * $(Oi);
	
	__pstrace = $(pstrace) * $(Oi);
	
	__occ = comp ( $(occ) * $(Oi), 0 );
	__occ_C = $(occ_C) * $(Oi);
	
	__mask = comp ( $(mask) * $(Oi), 0 );
	__mask_C = $(mask_C) * $(Oi);
	
	color $(dummy_C) = $(extra_C) * $(Oi);
	float $(dummy_F) = comp ( $(extra_F) * $(Oi), 0 ); 
	
	]]></code>
   <offset x="-115" y="-107"/>
  </node>
  <node type="" author="mesh" id="36" name="psTrace" label="psTrace">
   <help></help>
   <input/>
   <output>
    <property default="color(0.000,0.000,0.000)" type="color" value="color(0.000,0.000,0.000)" name="out" label="out"/>
   </output>
   <internal>
    <variable name="Nf"/>
    <variable name="Nc"/>
   </internal>
   <include/>
   <code><![CDATA[	
	  normal $(Nf);
 		normal $(Nc);
	
 		$(Nf) = faceforward(normalize(N), I);
    $(Nc) = transform("camera", ($(Nf) + point "camera" (0,0,0)));
    $(Nc) = normalize($(Nc));
		    
    setcomp($(out), 0, clamp((0.5 - xcomp($(Nc)) / 2), 0, 1));
    setcomp($(out), 1, clamp((0.5 + ycomp($(Nc)) / 2), 0, 1));
    setcomp($(out), 2, clamp(abs(zcomp($(Nc))), 0, 1));	
  ]]></code>
   <offset x="-326" y="299"/>
  </node>
  <node type="rib" author="mesh" id="37" name="BasicTorus" label="BasicTorus">
   <help>Basic torus primitive preview RIB</help>
   <input>
    <property provider="attribute" default="256" type="int" value="256" name="Width" label="Image width"/>
    <property provider="attribute" default="256" type="int" value="256" name="Height" label="Image height"/>
    <property provider="attribute" default="1.000" type="float" value="1.000" name="ShadingRate" label="Shading rate"/>
    <property provider="attribute" default="4" type="int" value="4" name="Samples" label="Samples"/>
    <property provider="attribute" default="catmull-rom" range="box:triangle:catmull-rom:gaussian:sinc:blackman-harris:mitchell:separable-catmull-rom:lanczos:bessel" subtype="selector" type="string" value="catmull-rom" name="Filter" label="Filter"/>
    <property provider="attribute" default="2.000" type="float" value="2.000" name="FilterWidth" label="Filter width"/>
    <property provider="attribute" default="0.500" type="float" value="0.500" name="DisplaceBound" label="Displacement Bound"/>
    <property provider="attribute" default="1.250" type="float" value="1.000" name="EnvIntensity" label="EnvLight Intensity"/>
    <property provider="attribute" default="kitchen_LL.hdr.${TEX}" range="All files=*.*:TEX=*.tex:TDL=*.tdl:TIFF=*.tif" subtype="file" type="string" value="ClassicKitchen.hdr.${TEX}" name="EnvMap" label="Environment Map"/>
    <property provider="attribute" default="_environment" type="string" value="_environment" name="EnvSpace" label="Coordinate System"/>
    <property provider="attribute" default="0.000 0.000 1.000" type="color" value="0.000 0.000 1.000" name="Color" label="Color"/>
    <property provider="attribute" default="1.000 1.000 1.000" type="color" value="1.000 1.000 1.000" name="Opacity" label="Opacity"/>
    <property default="null" type="displacement" value="null" name="FG_disp" label="FG_disp"/>
    <property default="defaultsurface" type="surface" value="defaultsurface" name="FG_surf" label="FG_surf"/>
    <property default="liquidchecker" type="surface" value="liquidchecker" name="BG_surf" label="BG_surf"/>
   </input>
   <output>
    <property default="${TempPath}/${NODELABEL}.tif" type="image" value="${TempPath}/${NODELABEL}.tif" name="ImageFile" label="ImageFile"/>
   </output>
   <internal/>
   <include/>
   <code><![CDATA[
  Option "searchpath" "shader" "&:@:.:~:${ShaderSearchPath}"
  Option "searchpath" "texture" "&:@:.:~:${TextureSearchPath}"

  Option "user" "float traceBreadthFactor" [1]
  Option "user" "float traceDepthFactor" [1]
  Option "trace" "int maxdepth" 4
  Option "trace" "float specularthreshold" [10]
  Option "trace" "int continuationbydefault" [1]

  Attribute "visibility" "int trace" [1]
  Attribute "visibility" "int transmission" [1]
  Attribute "visibility" "int diffuse" [1]
  Attribute "visibility" "int specular" [1]

  Attribute "trace" "int maxdiffusedepth" [1]
  Attribute "trace" "int maxspeculardepth" [4]

  ### Output image
  Display "$(ImageFile)" "tiff" "rgba"

  Hider "hidden" "int jitter" [1]
  Format $(Width) $(Height) 1.0
  PixelSamples $(Samples) $(Samples)
  PixelFilter "$(Filter)" $(FilterWidth) $(FilterWidth)
  ShadingRate $(ShadingRate)

  Projection "perspective" "fov" 45
  Translate 0 0 3.0

  Attribute "displacementbound" "float sphere" [$(DisplaceBound)]

  WorldBegin

    ReverseOrientation 
	
    TransformBegin
      Rotate -90 1 0 0
      CoordinateSystem "_environment"
    TransformEnd

    LightSource "distantlight" 1 "intensity" 1.0 "from" [-2 2 -3] "to" [0 0 0]
    LightSource "distantlight" 2 "intensity" 0.4 "from" [6 -3 0] "to" [0 0 0]
    LightSource "meEnvLight" 3  "uniform float Intensity" [$(EnvIntensity)] 
                                "uniform string meEnvMap_EnvMap" ["$(EnvMap)"]
                                "uniform string meEnvMap_Space" ["$(EnvSpace)"]

    AttributeBegin 
      

      Color [$(Color)]
      Opacity [$(Opacity)]

      AttributeBegin
        Rotate 45 1 0 0
        
        Displacement "$(FG_disp)"
        Surface "$(FG_surf)" 
        
        Torus 0.7 0.4 0.0 360 360
      AttributeEnd 
      
    AttributeEnd 
      
    AttributeBegin 
      Scale 7 7 7
      Translate 0 0 2
      Surface "$(BG_surf)" 
      
      Patch "bilinear" "P" [-1 1 0 1 1 0 -1 -1 0 1 -1 0]
    AttributeEnd  

  WorldEnd
  ]]></code>
   <offset x="73" y="-443"/>
  </node>
 </nodes>
 <links>
  <link srcNode_id="8" dstNode_id="6" id="12" srcParam="__diff" dstParam="image2"/>
  <link srcNode_id="8" dstNode_id="6" id="13" srcParam="__spec" dstParam="image3"/>
  <link srcNode_id="8" dstNode_id="6" id="14" srcParam="__diff_ibi" dstParam="image4"/>
  <link srcNode_id="8" dstNode_id="6" id="15" srcParam="__spec_ibi" dstParam="image5"/>
  <link srcNode_id="8" dstNode_id="6" id="16" srcParam="__occ" dstParam="image6"/>
  <link srcNode_id="11" dstNode_id="12" id="27" srcParam="result" dstParam="factor"/>
  <link srcNode_id="13" dstNode_id="1" id="28" srcParam="surface" dstParam="FG_surf"/>
  <link srcNode_id="15" dstNode_id="16" id="41" srcParam="result" dstParam="inColor1"/>
  <link srcNode_id="16" dstNode_id="18" id="42" srcParam="outColor" dstParam="input"/>
  <link srcNode_id="12" dstNode_id="19" id="43" srcParam="outColor" dstParam="BG"/>
  <link srcNode_id="5" dstNode_id="15" id="53" srcParam="Nf" dstParam="N"/>
  <link srcNode_id="19" dstNode_id="22" id="57" srcParam="out" dstParam="BG"/>
  <link srcNode_id="22" dstNode_id="24" id="60" srcParam="out" dstParam="BG"/>
  <link srcNode_id="24" dstNode_id="14" id="62" srcParam="out" dstParam="BG"/>
  <link srcNode_id="26" dstNode_id="14" id="67" srcParam="result" dstParam="FG"/>
  <link srcNode_id="27" dstNode_id="19" id="68" srcParam="result" dstParam="FG"/>
  <link srcNode_id="18" dstNode_id="27" id="69" srcParam="result" dstParam="input"/>
  <link srcNode_id="5" dstNode_id="28" id="70" srcParam="Nf" dstParam="N"/>
  <link srcNode_id="28" dstNode_id="22" id="71" srcParam="result" dstParam="FG"/>
  <link srcNode_id="5" dstNode_id="29" id="72" srcParam="Nf" dstParam="N"/>
  <link srcNode_id="29" dstNode_id="24" id="73" srcParam="result" dstParam="FG"/>
  <link srcNode_id="5" dstNode_id="30" id="74" srcParam="Nf" dstParam="N"/>
  <link srcNode_id="30" dstNode_id="26" id="75" srcParam="result" dstParam="input"/>
  <link srcNode_id="31" dstNode_id="32" id="76" srcParam="NS" dstParam="N"/>
  <link srcNode_id="14" dstNode_id="33" id="77" srcParam="out" dstParam="BG"/>
  <link srcNode_id="32" dstNode_id="34" id="78" srcParam="result" dstParam="inFloat"/>
  <link srcNode_id="34" dstNode_id="33" id="79" srcParam="outColor" dstParam="FG"/>
  <link srcNode_id="33" dstNode_id="3" id="80" srcParam="out" dstParam="Ci"/>
  <link srcNode_id="35" dstNode_id="8" id="81" srcParam="surface" dstParam="FG_surf"/>
  <link srcNode_id="8" dstNode_id="6" id="82" srcParam="ImageFile" dstParam="image"/>
  <link srcNode_id="8" dstNode_id="6" id="84" srcParam="__color" dstParam="image1"/>
  <link srcNode_id="33" dstNode_id="35" id="85" srcParam="out" dstParam="Ci"/>
  <link srcNode_id="32" dstNode_id="35" id="86" srcParam="result" dstParam="occ"/>
  <link srcNode_id="26" dstNode_id="35" id="87" srcParam="result" dstParam="spec_ibi"/>
  <link srcNode_id="29" dstNode_id="35" id="88" srcParam="result" dstParam="spec"/>
  <link srcNode_id="28" dstNode_id="35" id="89" srcParam="result" dstParam="diff"/>
  <link srcNode_id="27" dstNode_id="35" id="90" srcParam="result" dstParam="diff_ibi"/>
  <link srcNode_id="12" dstNode_id="35" id="91" srcParam="outColor" dstParam="color"/>
  <link srcNode_id="36" dstNode_id="35" id="92" srcParam="out" dstParam="pstrace"/>
  <link srcNode_id="36" dstNode_id="13" id="93" srcParam="out" dstParam="Ci"/>
  <link srcNode_id="3" dstNode_id="37" id="96" srcParam="surface" dstParam="FG_surf"/>
  <link srcNode_id="10" dstNode_id="2" id="98" srcParam="ImageFile" dstParam="image"/>
  <link srcNode_id="35" dstNode_id="10" id="99" srcParam="surface" dstParam="FG_surf"/>
 </links>
</nodenet>
