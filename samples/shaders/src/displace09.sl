/* Generated by meShaderEd */

#define DISPLACEMENT_SHADER displace09
displacement displace09 (
float IDbubbly09_Kd = 0.200;
float IDbubbly09_mult = 5.000;
float IDbubbly09_Nzscale = 1.000;
float IDbubbly09_bubsize = 1.000;
)
{
normal N13_N = normal(0.000,0.000,0.000);
point P13_P = point(0.000,0.000,0.000);
point IDbubbly09_outP = point(0.000,0.000,0.000);
normal IDbubbly09_outN = normal(0.000,0.000,0.000);

	  #ifdef SURFACE_SHADER
	  P13_P = P;
	  #endif
	  #ifdef DISPLACEMENT_SHADER
	  P13_P = P;
	  #endif
	  #ifdef LIGHT_SHADER
	  P13_P = Ps;
	  #endif
	  #ifdef VOLUME_SHADER
	  P13_P = Pv;
	  #endif
	  
	#ifdef SURFACE_SHADER
	  N13_N = N;
	  #endif
	  #ifdef DISPLACEMENT_SHADER
	  N13_N = N;
	  #endif
	  #ifdef LIGHT_SHADER
	  N13_N = Ns;
	  #endif
	  #ifdef VOLUME_SHADER
	  N13_N = Nv;
	  #endif
	
	  normal IDbubbly09_Nn = normalize(N13_N);
    float IDbubbly09_a, IDbubbly09_b, IDbubbly09_c, IDbubbly09_bub;
    float IDbubbly09_dist, IDbubbly09_shortest=10000;
    
    point IDbubbly09_Po = transform( "object", P13_P ) * IDbubbly09_mult;
  
    /* true cell center, surrounding cell centers, noised cell center */
    point IDbubbly09_trucell, IDbubbly09_surrcell, IDbubbly09_nzcell;
    vector IDbubbly09_offset;
    
    setxcomp ( IDbubbly09_trucell, floor ( xcomp ( IDbubbly09_Po ) ) + .5 );
    setycomp ( IDbubbly09_trucell ,floor ( ycomp ( IDbubbly09_Po ) ) + .5 );
    setzcomp ( IDbubbly09_trucell, floor ( zcomp ( IDbubbly09_Po ) ) + .5 );
  			     
    /* what is the shortest distance to a noised cell center? */
    for ( IDbubbly09_a = -1 ; IDbubbly09_a <= 1 ; IDbubbly09_a += 1 ) 
    {
      for ( IDbubbly09_b = -1 ; IDbubbly09_b <= 1 ; IDbubbly09_b += 1 )
      {
        for ( IDbubbly09_c = -1 ; IDbubbly09_c <= 1 ; IDbubbly09_c += 1 )
        {
        	IDbubbly09_offset = vector ( IDbubbly09_a, IDbubbly09_b, IDbubbly09_c );
        	IDbubbly09_surrcell = IDbubbly09_trucell + IDbubbly09_offset;
        	IDbubbly09_nzcell = IDbubbly09_surrcell + ( ( vector cellnoise ( IDbubbly09_surrcell ) - .5) * IDbubbly09_Nzscale );
        	IDbubbly09_dist = distance ( IDbubbly09_Po, IDbubbly09_nzcell );
        	if ( IDbubbly09_dist < IDbubbly09_shortest ) 
        	  IDbubbly09_shortest = IDbubbly09_dist;
        }
      }
    }
    IDbubbly09_bub = clamp ( IDbubbly09_shortest, 0, IDbubbly09_bubsize ) / IDbubbly09_bubsize; 
    P13_P += IDbubbly09_Nn * ( pow ( IDbubbly09_bub, 2 ) - 1 ) * IDbubbly09_Kd;
    N13_N = calculatenormal ( P13_P );
          
	  IDbubbly09_outP = P13_P; 
	  IDbubbly09_outN = N13_N;
	  
	  P = IDbubbly09_outP; 
	  N = IDbubbly09_outN;
	
}
